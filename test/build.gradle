apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
group = 'jay.test'
version = '0.0.1'

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavaDocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath()
            .join(File.pathSeparator))
}

task generateJavaDocsJar(type: Jar) {
    from generateJavaDocs.destinationDir
    classifier 'javadoc'
}
generateJavaDocsJar.dependsOn generateJavaDocs

bintray {
    user = 'jaypatel1717'
    key = 'KEY'
    pkg {
        repo = 'maven'
        name = 'Toasttest'

        version {
            name = '0.0.1'
            desc = 'Toasttest'
            released  = new Date()
            vcsTag = '0.0.1'
        }

        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/nomanr/WeekCalendar.git'
        websiteUrl = 'https://github.com/nomanr/WeekCalendar'
    }
    configurations = ['archives']
}

artifacts {
    archives generateJavaDocsJar
    archives generateSourcesJar
}